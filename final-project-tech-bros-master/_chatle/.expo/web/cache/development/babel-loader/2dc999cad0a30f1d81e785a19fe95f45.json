{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.PATTERNS = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _TextExtraction = _interopRequireDefault(require(\"./lib/TextExtraction\"));\n\nvar _jsxFileName = \"/Users/armanikorsich/UCRCS100/final-project-tech-bros/_chatle/node_modules/react-native-parsed-text/src/ParsedText.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar PATTERNS = {\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/\n};\nexports.PATTERNS = PATTERNS;\n\nvar defaultParseShape = _propTypes.default.shape(_objectSpread(_objectSpread({}, _reactNative.Text.propTypes), {}, {\n  type: _propTypes.default.oneOf(Object.keys(PATTERNS)).isRequired\n}));\n\nvar customParseShape = _propTypes.default.shape(_objectSpread(_objectSpread({}, _reactNative.Text.propTypes), {}, {\n  pattern: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(RegExp)]).isRequired\n}));\n\nvar ParsedText = function (_React$Component) {\n  (0, _inherits2.default)(ParsedText, _React$Component);\n\n  var _super = _createSuper(ParsedText);\n\n  function ParsedText() {\n    (0, _classCallCheck2.default)(this, ParsedText);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ParsedText, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"getPatterns\",\n    value: function getPatterns() {\n      return this.props.parse.map(function (option) {\n        var type = option.type,\n            patternOption = (0, _objectWithoutProperties2.default)(option, [\"type\"]);\n\n        if (type) {\n          if (!PATTERNS[type]) {\n            throw new Error(option.type + \" is not a supported type\");\n          }\n\n          patternOption.pattern = PATTERNS[type];\n        }\n\n        return patternOption;\n      });\n    }\n  }, {\n    key: \"getParsedText\",\n    value: function getParsedText() {\n      var _this = this;\n\n      if (!this.props.parse) {\n        return this.props.children;\n      }\n\n      if (typeof this.props.children !== 'string') {\n        return this.props.children;\n      }\n\n      var textExtraction = new _TextExtraction.default(this.props.children, this.getPatterns());\n      return textExtraction.parse().map(function (props, index) {\n        var parentStyle = _this.props.style;\n        var style = props.style,\n            remainder = (0, _objectWithoutProperties2.default)(props, [\"style\"]);\n        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n          key: \"parsedText-\" + index,\n          style: [parentStyle, style]\n        }, _this.props.childrenProps, remainder, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = _objectSpread({}, this.props),\n          parse = _this$props.parse,\n          childrenProps = _this$props.childrenProps,\n          remainder = (0, _objectWithoutProperties2.default)(_this$props, [\"parse\", \"childrenProps\"]);\n\n      return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n        ref: function ref(_ref) {\n          return _this2._root = _ref;\n        }\n      }, remainder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }), this.getParsedText());\n    }\n  }]);\n  return ParsedText;\n}(_react.default.Component);\n\nParsedText.displayName = 'ParsedText';\nParsedText.propTypes = _objectSpread(_objectSpread({}, _reactNative.Text.propTypes), {}, {\n  parse: _propTypes.default.arrayOf(_propTypes.default.oneOfType([defaultParseShape, customParseShape])),\n  childrenProps: _propTypes.default.shape(_reactNative.Text.propTypes)\n});\nParsedText.defaultProps = {\n  parse: null,\n  childrenProps: {}\n};\nvar _default = ParsedText;\nexports.default = _default;","map":{"version":3,"sources":["/Users/armanikorsich/UCRCS100/final-project-tech-bros/_chatle/node_modules/react-native-parsed-text/src/ParsedText.js"],"names":["PATTERNS","url","phone","email","defaultParseShape","PropTypes","shape","Text","propTypes","type","oneOf","Object","keys","isRequired","customParseShape","pattern","oneOfType","string","instanceOf","RegExp","ParsedText","nativeProps","_root","setNativeProps","props","parse","map","option","patternOption","Error","children","textExtraction","TextExtraction","getPatterns","index","parentStyle","style","remainder","childrenProps","ref","getParsedText","React","Component","displayName","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport TextExtraction from './lib/TextExtraction';\n\nexport const PATTERNS = {\n  url: /(https?:\\/\\/|www\\.)[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/=]*[-a-zA-Z0-9@:%_\\+~#?&\\/=])*/i,\n  phone: /[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,7}/,\n  email: /\\S+@\\S+\\.\\S+/,\n};\n\nconst defaultParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  type: PropTypes.oneOf(Object.keys(PATTERNS)).isRequired,\n});\n\nconst customParseShape = PropTypes.shape({\n  ...Text.propTypes,\n  pattern: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]).isRequired,\n});\n\nclass ParsedText extends React.Component {\n  static displayName = 'ParsedText';\n\n  static propTypes = {\n    ...Text.propTypes,\n    parse: PropTypes.arrayOf(\n      PropTypes.oneOfType([defaultParseShape, customParseShape]),\n    ),\n    childrenProps: PropTypes.shape(Text.propTypes),\n  };\n\n  static defaultProps = {\n    parse: null,\n    childrenProps: {},\n  };\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  getPatterns() {\n    return this.props.parse.map(option => {\n      const { type, ...patternOption } = option;\n      if (type) {\n        if (!PATTERNS[type]) {\n          throw new Error(`${option.type} is not a supported type`);\n        }\n        patternOption.pattern = PATTERNS[type];\n      }\n\n      return patternOption;\n    });\n  }\n\n  getParsedText() {\n    if (!this.props.parse) {\n      return this.props.children;\n    }\n    if (typeof this.props.children !== 'string') {\n      return this.props.children;\n    }\n\n    const textExtraction = new TextExtraction(\n      this.props.children,\n      this.getPatterns(),\n    );\n\n    return textExtraction.parse().map((props, index) => {\n      const { style: parentStyle } = this.props\n      const { style, ...remainder } = props\n      return (\n        <Text\n          key={`parsedText-${index}`}\n          style={[parentStyle, style]}\n          {...this.props.childrenProps}\n          {...remainder}\n        />\n      );\n    });\n  }\n\n  render() {\n    // Discard custom props before passing remainder to Text\n    const { parse, childrenProps, ...remainder } = { ...this.props };\n\n    return (\n      <Text ref={ref => (this._root = ref)} {...remainder}>\n        {this.getParsedText()}\n      </Text>\n    );\n  }\n}\n\nexport default ParsedText;\n"]},"metadata":{},"sourceType":"script"}