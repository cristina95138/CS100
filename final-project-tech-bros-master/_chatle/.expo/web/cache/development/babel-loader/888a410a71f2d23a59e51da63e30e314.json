{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTypingAnimation = require(\"react-native-typing-animation\");\n\nvar _useUpdateLayoutEffect = require(\"./hooks/useUpdateLayoutEffect\");\n\nvar _Color = _interopRequireDefault(require(\"./Color\"));\n\nvar _jsxFileName = \"/Users/shraygrover/final-project-tech-bros/_chatle/node_modules/react-native-gifted-chat/lib/TypingIndicator.js\";\n\nvar TypingIndicator = function TypingIndicator(_ref) {\n  var isTyping = _ref.isTyping;\n\n  var _React$useMemo = React.useMemo(function () {\n    return {\n      yCoords: new _reactNative.Animated.Value(200),\n      heightScale: new _reactNative.Animated.Value(0),\n      marginScale: new _reactNative.Animated.Value(0)\n    };\n  }, []),\n      yCoords = _React$useMemo.yCoords,\n      heightScale = _React$useMemo.heightScale,\n      marginScale = _React$useMemo.marginScale;\n\n  (0, _useUpdateLayoutEffect.useUpdateLayoutEffect)(function () {\n    if (isTyping) {\n      slideIn();\n    } else {\n      slideOut();\n    }\n  }, [isTyping]);\n\n  var slideIn = function slideIn() {\n    _reactNative.Animated.parallel([_reactNative.Animated.spring(yCoords, {\n      toValue: 0,\n      useNativeDriver: false\n    }), _reactNative.Animated.timing(heightScale, {\n      toValue: 35,\n      duration: 250,\n      useNativeDriver: false\n    }), _reactNative.Animated.timing(marginScale, {\n      toValue: 8,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  var slideOut = function slideOut() {\n    _reactNative.Animated.parallel([_reactNative.Animated.spring(yCoords, {\n      toValue: 200,\n      useNativeDriver: false\n    }), _reactNative.Animated.timing(heightScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    }), _reactNative.Animated.timing(marginScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  var opacity = yCoords.interpolate({\n    inputRange: [0, 200],\n    outputRange: [1, 0]\n  });\n  return React.createElement(_reactNative.Animated.View, {\n    style: [styles.container, {\n      opacity: opacity,\n      transform: [{\n        translateY: yCoords\n      }],\n      height: heightScale,\n      marginBottom: marginScale\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(_reactNativeTypingAnimation.TypingAnimation, {\n    style: {\n      marginLeft: 6,\n      marginTop: 7.2\n    },\n    dotRadius: 4,\n    dotMargin: 5.5,\n    dotColor: 'rgba(0, 0, 0, 0.38)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginLeft: 8,\n    width: 45,\n    borderRadius: 15,\n    backgroundColor: _Color.default.leftBubbleBackground\n  }\n});\n\nvar _default = TypingIndicator;\nexports.default = _default;","map":{"version":3,"sources":["../src/TypingIndicator.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from './hooks/useUpdateLayoutEffect';\nimport Color from './Color';\nconst TypingIndicator = ({ isTyping }) => {\n    const { yCoords, heightScale, marginScale } = React.useMemo(() => ({\n        yCoords: new Animated.Value(200),\n        heightScale: new Animated.Value(0),\n        marginScale: new Animated.Value(0),\n    }), []);\n    // on isTyping fire side effect\n    useUpdateLayoutEffect(() => {\n        if (isTyping) {\n            slideIn();\n        }\n        else {\n            slideOut();\n        }\n    }, [isTyping]);\n    // side effect\n    const slideIn = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 0,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 35,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 8,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    // side effect\n    const slideOut = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 200,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    const opacity = yCoords.interpolate({\n        inputRange: [0, 200],\n        outputRange: [1, 0],\n    });\n    return (<Animated.View style={[\n        styles.container,\n        {\n            opacity,\n            transform: [\n                {\n                    translateY: yCoords,\n                },\n            ],\n            height: heightScale,\n            marginBottom: marginScale,\n        },\n    ]}>\n      <TypingAnimation style={{ marginLeft: 6, marginTop: 7.2 }} dotRadius={4} dotMargin={5.5} dotColor={'rgba(0, 0, 0, 0.38)'}/>\n    </Animated.View>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        marginLeft: 8,\n        width: 45,\n        borderRadius: 15,\n        backgroundColor: Color.leftBubbleBackground,\n    },\n});\nexport default TypingIndicator;\n//# sourceMappingURL=TypingIndicator.js.map"]},"metadata":{},"sourceType":"script"}