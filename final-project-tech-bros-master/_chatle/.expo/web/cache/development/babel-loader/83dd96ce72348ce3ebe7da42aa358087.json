{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGiftedChat = require(\"react-native-gifted-chat\");\n\nvar _reactNativeDialogflow = require(\"react-native-dialogflow\");\n\nvar _env = require(\"./env\");\n\nvar _jsxFileName = \"/Users/shraygrover/final-project-tech-bros/_chatle/Screens/Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar BOT_USER = {\n  _id: 2,\n  name: 'FAQ Bot',\n  avatar: 'https://i.imgur.com/LSkLehu.png'\n};\n\nvar App = function (_Component) {\n  (0, _inherits2.default)(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: [{\n        _id: 1,\n        text: \"Hi! I am Chatle! Let's start working on your schedule.\\nStart by saying 'add a class' or 'view my schedule'\",\n        createdAt: new Date(),\n        user: BOT_USER\n      }]\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _reactNativeDialogflow.Dialogflow_V2.setConfiguration(_env.dialogflowConfig.client_email, _env.dialogflowConfig.private_key, _reactNativeDialogflow.Dialogflow_V2.LANG_ENGLISH_US, _env.dialogflowConfig.project_id);\n    }\n  }, {\n    key: \"handleGoogleResponse\",\n    value: function handleGoogleResponse(result) {\n      var text = result.queryResult.fulfillmentMessages[0].text.text[0];\n      this.sendBotResponse(text);\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this2 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: _reactNativeGiftedChat.GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      var message = messages[0].text;\n\n      _reactNativeDialogflow.Dialogflow_V2.requestQuery(message, function (result) {\n        return _this2.handleGoogleResponse(result);\n      }, function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"sendBotResponse\",\n    value: function sendBotResponse(text) {\n      var msg = {\n        _id: this.state.messages.length + 1,\n        text: text,\n        createdAt: new Date(),\n        user: BOT_USER\n      };\n      this.setState(function (previousState) {\n        return {\n          messages: _reactNativeGiftedChat.GiftedChat.append(previousState.messages, [msg])\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeGiftedChat.GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this3.onSend(messages);\n        },\n        user: {\n          _id: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return App;\n}(_react.Component);\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["/Users/shraygrover/final-project-tech-bros/_chatle/Screens/Home.js"],"names":["BOT_USER","_id","name","avatar","App","state","messages","text","createdAt","Date","user","Dialogflow_V2","setConfiguration","dialogflowConfig","client_email","private_key","LANG_ENGLISH_US","project_id","result","queryResult","fulfillmentMessages","sendBotResponse","setState","previousState","GiftedChat","append","message","requestQuery","handleGoogleResponse","error","console","log","msg","length","flex","backgroundColor","onSend","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAE,CADU;AAEfC,EAAAA,IAAI,EAAE,SAFS;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAjB;;IAMMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CACR;AACEL,QAAAA,GAAG,EAAE,CADP;AAEEM,QAAAA,IAAI,+GAFN;AAGEC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,QAAAA,IAAI,EAAEV;AAJR,OADQ;AADJ,K;;;;;;wCAWY;AAClBW,2CAAcC,gBAAd,CACEC,sBAAiBC,YADnB,EAEED,sBAAiBE,WAFnB,EAGEJ,qCAAcK,eAHhB,EAIEH,sBAAiBI,UAJnB;AAMD;;;yCAEoBC,M,EAAQ;AAC3B,UAAIX,IAAI,GAAGW,MAAM,CAACC,WAAP,CAAmBC,mBAAnB,CAAuC,CAAvC,EAA0Cb,IAA1C,CAA+CA,IAA/C,CAAoD,CAApD,CAAX;AACA,WAAKc,eAAL,CAAqBd,IAArB;AACD;;;6BAEqB;AAAA;;AAAA,UAAfD,QAAe,uEAAJ,EAAI;AACpB,WAAKgB,QAAL,CAAc,UAAAC,aAAa;AAAA,eAAK;AAC9BjB,UAAAA,QAAQ,EAAEkB,kCAAWC,MAAX,CAAkBF,aAAa,CAACjB,QAAhC,EAA0CA,QAA1C;AADoB,SAAL;AAAA,OAA3B;AAIA,UAAIoB,OAAO,GAAGpB,QAAQ,CAAC,CAAD,CAAR,CAAYC,IAA1B;;AACAI,2CAAcgB,YAAd,CACED,OADF,EAEE,UAAAR,MAAM;AAAA,eAAI,MAAI,CAACU,oBAAL,CAA0BV,MAA1B,CAAJ;AAAA,OAFR,EAGE,UAAAW,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAHP;AAKD;;;oCAEetB,I,EAAM;AACpB,UAAIyB,GAAG,GAAG;AACR/B,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoB2B,MAApB,GAA6B,CAD1B;AAER1B,QAAAA,IAAI,EAAJA,IAFQ;AAGRC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHH;AAIRC,QAAAA,IAAI,EAAEV;AAJE,OAAV;AAOA,WAAKsB,QAAL,CAAc,UAAAC,aAAa;AAAA,eAAK;AAC9BjB,UAAAA,QAAQ,EAAEkB,kCAAWC,MAAX,CAAkBF,aAAa,CAACjB,QAAhC,EAA0C,CAAC0B,GAAD,CAA1C;AADoB,SAAL;AAAA,OAA3B;AAGD;;;6BAEQ;AAAA;;AACP,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,eAAe,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iCAAD;AACE,QAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAWC,QADvB;AAEE,QAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAAC8B,MAAL,CAAY9B,QAAZ,CAAJ;AAAA,SAFlB;AAGE,QAAA,IAAI,EAAE;AACJL,UAAAA,GAAG,EAAE;AADD,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;EAhEeoC,gB;;eAmEHjC,G","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { Dialogflow_V2 } from 'react-native-dialogflow';\n\nimport { dialogflowConfig } from './env';\n\nconst BOT_USER = {\n  _id: 2,\n  name: 'FAQ Bot',\n  avatar: 'https://i.imgur.com/LSkLehu.png'\n};\n\nclass App extends Component {\n  state = {\n    messages: [\n      {\n        _id: 1,\n        text: `Hi! I am Chatle! Let's start working on your schedule.\\nStart by saying 'add a class' or 'view my schedule'`,\n        createdAt: new Date(),\n        user: BOT_USER\n      }\n    ]\n  };\n\n  componentDidMount() {\n    Dialogflow_V2.setConfiguration(\n      dialogflowConfig.client_email,\n      dialogflowConfig.private_key,\n      Dialogflow_V2.LANG_ENGLISH_US,\n      dialogflowConfig.project_id\n    );\n  }\n\n  handleGoogleResponse(result) {\n    let text = result.queryResult.fulfillmentMessages[0].text.text[0];\n    this.sendBotResponse(text);\n  }\n\n  onSend(messages = []) {\n    this.setState(previousState => ({\n      messages: GiftedChat.append(previousState.messages, messages)\n    }));\n\n    let message = messages[0].text;\n    Dialogflow_V2.requestQuery(\n      message,\n      result => this.handleGoogleResponse(result),\n      error => console.log(error)\n    );\n  }\n\n  sendBotResponse(text) {\n    let msg = {\n      _id: this.state.messages.length + 1,\n      text,\n      createdAt: new Date(),\n      user: BOT_USER\n    };\n\n    this.setState(previousState => ({\n      messages: GiftedChat.append(previousState.messages, [msg])\n    }));\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1, backgroundColor: '#fff' }}>\n        <GiftedChat\n          messages={this.state.messages}\n          onSend={messages => this.onSend(messages)}\n          user={{\n            _id: 1\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}