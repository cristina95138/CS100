{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _LoadEarlier = _interopRequireDefault(require(\"./LoadEarlier\"));\n\nvar _Message = _interopRequireDefault(require(\"./Message\"));\n\nvar _Color = _interopRequireDefault(require(\"./Color\"));\n\nvar _utils = require(\"./utils\");\n\nvar _TypingIndicator = _interopRequireDefault(require(\"./TypingIndicator\"));\n\nvar _jsxFileName = \"/Users/shraygrover/final-project-tech-bros/_chatle/node_modules/react-native-gifted-chat/lib/MessageContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  containerAlignTop: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  contentContainerStyle: {\n    flexGrow: 1,\n    justifyContent: 'flex-start'\n  },\n  emptyChatContainer: {\n    flex: 1,\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  headerWrapper: {\n    flex: 1\n  },\n  listStyle: {\n    flex: 1\n  },\n  scrollToBottomStyle: {\n    opacity: 0.8,\n    position: 'absolute',\n    right: 10,\n    bottom: 30,\n    zIndex: 999,\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: _Color.default.white,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: _Color.default.black,\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 1\n  }\n});\n\nvar MessageContainer = function (_React$PureComponent) {\n  (0, _inherits2.default)(MessageContainer, _React$PureComponent);\n\n  var _super = _createSuper(MessageContainer);\n\n  function MessageContainer() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MessageContainer);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      showScrollBottom: false\n    };\n\n    _this.attachKeyboardListeners = function () {\n      var invertibleProps = _this.props.invertibleScrollViewProps;\n\n      if (invertibleProps) {\n        _reactNative.Keyboard.addListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);\n\n        _reactNative.Keyboard.addListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);\n\n        _reactNative.Keyboard.addListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);\n\n        _reactNative.Keyboard.addListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);\n      }\n    };\n\n    _this.detachKeyboardListeners = function () {\n      var invertibleProps = _this.props.invertibleScrollViewProps;\n\n      _reactNative.Keyboard.removeListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);\n\n      _reactNative.Keyboard.removeListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);\n\n      _reactNative.Keyboard.removeListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);\n\n      _reactNative.Keyboard.removeListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);\n    };\n\n    _this.renderTypingIndicator = function () {\n      if (_reactNative.Platform.OS === 'web') {\n        return null;\n      }\n\n      return _react.default.createElement(_TypingIndicator.default, {\n        isTyping: _this.props.isTyping || false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }\n      });\n    };\n\n    _this.renderFooter = function () {\n      if (_this.props.renderFooter) {\n        return _this.props.renderFooter(_this.props);\n      }\n\n      return _this.renderTypingIndicator();\n    };\n\n    _this.renderLoadEarlier = function () {\n      if (_this.props.loadEarlier === true) {\n        var loadEarlierProps = _objectSpread({}, _this.props);\n\n        if (_this.props.renderLoadEarlier) {\n          return _this.props.renderLoadEarlier(loadEarlierProps);\n        }\n\n        return _react.default.createElement(_LoadEarlier.default, (0, _extends2.default)({}, loadEarlierProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 24\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.scrollToBottom = function () {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var inverted = _this.props.inverted;\n\n      if (inverted) {\n        _this.scrollTo({\n          offset: 0,\n          animated: animated\n        });\n      } else if (_this.props.forwardRef && _this.props.forwardRef.current) {\n        _this.props.forwardRef.current.scrollToEnd({\n          animated: animated\n        });\n      }\n    };\n\n    _this.handleOnScroll = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n          contentOffsetY = _event$nativeEvent.contentOffset.y,\n          contentSizeHeight = _event$nativeEvent.contentSize.height,\n          layoutMeasurementHeight = _event$nativeEvent.layoutMeasurement.height;\n      var scrollToBottomOffset = _this.props.scrollToBottomOffset;\n\n      if (_this.props.inverted) {\n        if (contentOffsetY > scrollToBottomOffset) {\n          _this.setState({\n            showScrollBottom: true\n          });\n        } else {\n          _this.setState({\n            showScrollBottom: false\n          });\n        }\n      } else {\n        if (contentOffsetY < scrollToBottomOffset && contentSizeHeight - layoutMeasurementHeight > scrollToBottomOffset) {\n          _this.setState({\n            showScrollBottom: true\n          });\n        } else {\n          _this.setState({\n            showScrollBottom: false\n          });\n        }\n      }\n    };\n\n    _this.renderRow = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n\n      if (!item._id && item._id !== 0) {\n        (0, _utils.warning)('GiftedChat: `_id` is missing for message', JSON.stringify(item));\n      }\n\n      if (!item.user) {\n        if (!item.system) {\n          (0, _utils.warning)('GiftedChat: `user` is missing for message', JSON.stringify(item));\n        }\n\n        item.user = {\n          _id: 0\n        };\n      }\n\n      var _this$props = _this.props,\n          messages = _this$props.messages,\n          user = _this$props.user,\n          inverted = _this$props.inverted,\n          restProps = (0, _objectWithoutProperties2.default)(_this$props, [\"messages\", \"user\", \"inverted\"]);\n\n      if (messages && user) {\n        var previousMessage = (inverted ? messages[index + 1] : messages[index - 1]) || {};\n        var nextMessage = (inverted ? messages[index - 1] : messages[index + 1]) || {};\n\n        var messageProps = _objectSpread(_objectSpread({}, restProps), {}, {\n          user: user,\n          key: item._id,\n          currentMessage: item,\n          previousMessage: previousMessage,\n          inverted: inverted,\n          nextMessage: nextMessage,\n          position: item.user._id === user._id ? 'right' : 'left'\n        });\n\n        if (_this.props.renderMessage) {\n          return _this.props.renderMessage(messageProps);\n        }\n\n        return _react.default.createElement(_Message.default, (0, _extends2.default)({}, messageProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 24\n          }\n        }));\n      }\n\n      return null;\n    };\n\n    _this.renderChatEmpty = function () {\n      if (_this.props.renderChatEmpty) {\n        return _this.props.inverted ? _this.props.renderChatEmpty() : _react.default.createElement(_reactNative.View, {\n          style: styles.emptyChatContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 80\n          }\n        }, _this.props.renderChatEmpty());\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 20\n        }\n      });\n    };\n\n    _this.renderHeaderWrapper = function () {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.headerWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 43\n        }\n      }, _this.renderLoadEarlier());\n    };\n\n    _this.onLayoutList = function () {\n      if (!_this.props.inverted && !!_this.props.messages && _this.props.messages.length) {\n        setTimeout(function () {\n          return _this.scrollToBottom && _this.scrollToBottom(false);\n        }, 15 * _this.props.messages.length);\n      }\n    };\n\n    _this.onEndReached = function (_ref2) {\n      var distanceFromEnd = _ref2.distanceFromEnd;\n      var _this$props2 = _this.props,\n          loadEarlier = _this$props2.loadEarlier,\n          onLoadEarlier = _this$props2.onLoadEarlier,\n          infiniteScroll = _this$props2.infiniteScroll,\n          isLoadingEarlier = _this$props2.isLoadingEarlier;\n\n      if (infiniteScroll && distanceFromEnd > 0 && distanceFromEnd <= 100 && loadEarlier && onLoadEarlier && !isLoadingEarlier && _reactNative.Platform.OS !== 'web') {\n        onLoadEarlier();\n      }\n    };\n\n    _this.keyExtractor = function (item) {\n      return \"\" + item._id;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(MessageContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.messages && this.props.messages.length === 0) {\n        this.attachKeyboardListeners();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.detachKeyboardListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.messages && prevProps.messages.length === 0 && this.props.messages && this.props.messages.length > 0) {\n        this.detachKeyboardListeners();\n      } else if (prevProps.messages && this.props.messages && prevProps.messages.length > 0 && this.props.messages.length === 0) {\n        this.attachKeyboardListeners();\n      }\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(options) {\n      if (this.props.forwardRef && this.props.forwardRef.current && options) {\n        this.props.forwardRef.current.scrollToOffset(options);\n      }\n    }\n  }, {\n    key: \"renderScrollBottomComponent\",\n    value: function renderScrollBottomComponent() {\n      var scrollToBottomComponent = this.props.scrollToBottomComponent;\n\n      if (scrollToBottomComponent) {\n        return scrollToBottomComponent();\n      }\n\n      return _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 16\n        }\n      }, \"V\");\n    }\n  }, {\n    key: \"renderScrollToBottomWrapper\",\n    value: function renderScrollToBottomWrapper() {\n      var _this2 = this;\n\n      var propsStyle = this.props.scrollToBottomStyle || {};\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.scrollToBottomStyle, propsStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.scrollToBottom();\n        },\n        hitSlop: {\n          top: 5,\n          left: 5,\n          right: 5,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, this.renderScrollBottomComponent()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inverted = this.props.inverted;\n      return _react.default.createElement(_reactNative.View, {\n        style: this.props.alignTop ? styles.containerAlignTop : styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, this.state.showScrollBottom && this.props.scrollToBottom ? this.renderScrollToBottomWrapper() : null, _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({\n        ref: this.props.forwardRef,\n        extraData: [this.props.extraData, this.props.isTyping],\n        keyExtractor: this.keyExtractor,\n        enableEmptySections: true,\n        automaticallyAdjustContentInsets: false,\n        inverted: inverted,\n        data: this.props.messages,\n        style: styles.listStyle,\n        contentContainerStyle: styles.contentContainerStyle,\n        renderItem: this.renderRow\n      }, this.props.invertibleScrollViewProps, {\n        ListEmptyComponent: this.renderChatEmpty,\n        ListFooterComponent: inverted ? this.renderHeaderWrapper : this.renderFooter,\n        ListHeaderComponent: inverted ? this.renderFooter : this.renderHeaderWrapper,\n        onScroll: this.handleOnScroll,\n        scrollEventThrottle: 100,\n        onLayout: this.onLayoutList,\n        onEndReached: this.onEndReached,\n        onEndReachedThreshold: 0.1\n      }, this.props.listViewProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n  return MessageContainer;\n}(_react.default.PureComponent);\n\nexports.default = MessageContainer;\nMessageContainer.defaultProps = {\n  messages: [],\n  user: {},\n  isTyping: false,\n  renderChatEmpty: null,\n  renderFooter: null,\n  renderMessage: null,\n  onLoadEarlier: function onLoadEarlier() {},\n  onQuickReply: function onQuickReply() {},\n  inverted: true,\n  loadEarlier: false,\n  listViewProps: {},\n  invertibleScrollViewProps: {},\n  extraData: null,\n  scrollToBottom: false,\n  scrollToBottomOffset: 200,\n  alignTop: false,\n  scrollToBottomStyle: {},\n  infiniteScroll: false,\n  isLoadingEarlier: false\n};\nMessageContainer.propTypes = {\n  messages: _propTypes.default.arrayOf(_propTypes.default.object),\n  isTyping: _propTypes.default.bool,\n  user: _propTypes.default.object,\n  renderChatEmpty: _propTypes.default.func,\n  renderFooter: _propTypes.default.func,\n  renderMessage: _propTypes.default.func,\n  renderLoadEarlier: _propTypes.default.func,\n  onLoadEarlier: _propTypes.default.func,\n  listViewProps: _propTypes.default.object,\n  inverted: _propTypes.default.bool,\n  loadEarlier: _propTypes.default.bool,\n  invertibleScrollViewProps: _propTypes.default.object,\n  extraData: _propTypes.default.array,\n  scrollToBottom: _propTypes.default.bool,\n  scrollToBottomOffset: _propTypes.default.number,\n  scrollToBottomComponent: _propTypes.default.func,\n  alignTop: _propTypes.default.bool,\n  scrollToBottomStyle: _utils.StylePropType,\n  infiniteScroll: _propTypes.default.bool\n};","map":{"version":3,"sources":["../src/MessageContainer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FlatList, View, StyleSheet, Keyboard, TouchableOpacity, Text, Platform, } from 'react-native';\nimport LoadEarlier from './LoadEarlier';\nimport Message from './Message';\nimport Color from './Color';\nimport { warning, StylePropType } from './utils';\nimport TypingIndicator from './TypingIndicator';\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        \n        flexDirection: 'row',\n        alignItems: 'flex-start',\n    },\n    containerAlignTop: {\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n    },\n    contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: 'flex-start',\n    },\n    emptyChatContainer: {\n        flex: 1,\n        transform: [{ scaleY: -1 }],\n    },\n    headerWrapper: {\n        flex: 1,\n    },\n    listStyle: {\n        flex: 1,\n    },\n    scrollToBottomStyle: {\n        opacity: 0.8,\n        position: 'absolute',\n        right: 10,\n        bottom: 30,\n        zIndex: 999,\n        height: 40,\n        width: 40,\n        borderRadius: 20,\n        backgroundColor: Color.white,\n        alignItems: 'center',\n        justifyContent: 'center',\n        shadowColor: Color.black,\n        shadowOpacity: 0.5,\n        shadowOffset: { width: 0, height: 0 },\n        shadowRadius: 1,\n    },\n});\nexport default class MessageContainer extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            showScrollBottom: false,\n        };\n        this.attachKeyboardListeners = () => {\n            const { invertibleScrollViewProps: invertibleProps } = this.props;\n            if (invertibleProps) {\n                Keyboard.addListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);\n                Keyboard.addListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);\n                Keyboard.addListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);\n                Keyboard.addListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);\n            }\n        };\n        this.detachKeyboardListeners = () => {\n            const { invertibleScrollViewProps: invertibleProps } = this.props;\n            Keyboard.removeListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);\n            Keyboard.removeListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);\n            Keyboard.removeListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);\n            Keyboard.removeListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);\n        };\n        this.renderTypingIndicator = () => {\n            if (Platform.OS === 'web') {\n                return null;\n            }\n            return <TypingIndicator isTyping={this.props.isTyping || false}/>;\n        };\n        this.renderFooter = () => {\n            if (this.props.renderFooter) {\n                return this.props.renderFooter(this.props);\n            }\n            return this.renderTypingIndicator();\n        };\n        this.renderLoadEarlier = () => {\n            if (this.props.loadEarlier === true) {\n                const loadEarlierProps = {\n                    ...this.props,\n                };\n                if (this.props.renderLoadEarlier) {\n                    return this.props.renderLoadEarlier(loadEarlierProps);\n                }\n                return <LoadEarlier {...loadEarlierProps}/>;\n            }\n            return null;\n        };\n        this.scrollToBottom = (animated = true) => {\n            const { inverted } = this.props;\n            if (inverted) {\n                this.scrollTo({ offset: 0, animated });\n            }\n            else if (this.props.forwardRef && this.props.forwardRef.current) {\n                this.props.forwardRef.current.scrollToEnd({ animated });\n            }\n        };\n        this.handleOnScroll = (event) => {\n            const { nativeEvent: { contentOffset: { y: contentOffsetY }, contentSize: { height: contentSizeHeight }, layoutMeasurement: { height: layoutMeasurementHeight }, }, } = event;\n            const { scrollToBottomOffset } = this.props;\n            if (this.props.inverted) {\n                if (contentOffsetY > scrollToBottomOffset) {\n                    this.setState({ showScrollBottom: true });\n                }\n                else {\n                    this.setState({ showScrollBottom: false });\n                }\n            }\n            else {\n                if (contentOffsetY < scrollToBottomOffset &&\n                    contentSizeHeight - layoutMeasurementHeight > scrollToBottomOffset) {\n                    this.setState({ showScrollBottom: true });\n                }\n                else {\n                    this.setState({ showScrollBottom: false });\n                }\n            }\n        };\n        this.renderRow = ({ item, index }) => {\n            if (!item._id && item._id !== 0) {\n                warning('GiftedChat: `_id` is missing for message', JSON.stringify(item));\n            }\n            if (!item.user) {\n                if (!item.system) {\n                    warning('GiftedChat: `user` is missing for message', JSON.stringify(item));\n                }\n                item.user = { _id: 0 };\n            }\n            const { messages, user, inverted, ...restProps } = this.props;\n            if (messages && user) {\n                const previousMessage = (inverted ? messages[index + 1] : messages[index - 1]) || {};\n                const nextMessage = (inverted ? messages[index - 1] : messages[index + 1]) || {};\n                const messageProps = {\n                    ...restProps,\n                    user,\n                    key: item._id,\n                    currentMessage: item,\n                    previousMessage,\n                    inverted,\n                    nextMessage,\n                    position: item.user._id === user._id ? 'right' : 'left',\n                };\n                if (this.props.renderMessage) {\n                    return this.props.renderMessage(messageProps);\n                }\n                return <Message {...messageProps}/>;\n            }\n            return null;\n        };\n        this.renderChatEmpty = () => {\n            if (this.props.renderChatEmpty) {\n                return this.props.inverted ? (this.props.renderChatEmpty()) : (<View style={styles.emptyChatContainer}>\n          {this.props.renderChatEmpty()}\n        </View>);\n            }\n            return <View style={styles.container}/>;\n        };\n        this.renderHeaderWrapper = () => (<View style={styles.headerWrapper}>{this.renderLoadEarlier()}</View>);\n        this.onLayoutList = () => {\n            if (!this.props.inverted &&\n                !!this.props.messages &&\n                this.props.messages.length) {\n                setTimeout(() => this.scrollToBottom && this.scrollToBottom(false), 15 * this.props.messages.length);\n            }\n        };\n        this.onEndReached = ({ distanceFromEnd }) => {\n            const { loadEarlier, onLoadEarlier, infiniteScroll, isLoadingEarlier, } = this.props;\n            if (infiniteScroll &&\n                distanceFromEnd > 0 &&\n                distanceFromEnd <= 100 &&\n                loadEarlier &&\n                onLoadEarlier &&\n                !isLoadingEarlier &&\n                Platform.OS !== 'web') {\n                onLoadEarlier();\n            }\n        };\n        this.keyExtractor = (item) => `${item._id}`;\n    }\n    componentDidMount() {\n        if (this.props.messages && this.props.messages.length === 0) {\n            this.attachKeyboardListeners();\n        }\n    }\n    componentWillUnmount() {\n        this.detachKeyboardListeners();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.messages &&\n            prevProps.messages.length === 0 &&\n            this.props.messages &&\n            this.props.messages.length > 0) {\n            this.detachKeyboardListeners();\n        }\n        else if (prevProps.messages &&\n            this.props.messages &&\n            prevProps.messages.length > 0 &&\n            this.props.messages.length === 0) {\n            this.attachKeyboardListeners();\n        }\n    }\n    scrollTo(options) {\n        if (this.props.forwardRef && this.props.forwardRef.current && options) {\n            this.props.forwardRef.current.scrollToOffset(options);\n        }\n    }\n    renderScrollBottomComponent() {\n        const { scrollToBottomComponent } = this.props;\n        if (scrollToBottomComponent) {\n            return scrollToBottomComponent();\n        }\n        return <Text>V</Text>;\n    }\n    renderScrollToBottomWrapper() {\n        const propsStyle = this.props.scrollToBottomStyle || {};\n        return (<View style={[styles.scrollToBottomStyle, propsStyle]}>\n        <TouchableOpacity onPress={() => this.scrollToBottom()} hitSlop={{ top: 5, left: 5, right: 5, bottom: 5 }}>\n          {this.renderScrollBottomComponent()}\n        </TouchableOpacity>\n      </View>);\n    }\n    render() {\n        const { inverted } = this.props;\n        return (<View style={this.props.alignTop ? styles.containerAlignTop : styles.container}>\n        {this.state.showScrollBottom && this.props.scrollToBottom\n            ? this.renderScrollToBottomWrapper()\n            : null}\n        <FlatList ref={this.props.forwardRef} extraData={[this.props.extraData, this.props.isTyping]} keyExtractor={this.keyExtractor} enableEmptySections automaticallyAdjustContentInsets={false} inverted={inverted} data={this.props.messages} style={styles.listStyle} contentContainerStyle={styles.contentContainerStyle} renderItem={this.renderRow} {...this.props.invertibleScrollViewProps} ListEmptyComponent={this.renderChatEmpty} ListFooterComponent={inverted ? this.renderHeaderWrapper : this.renderFooter} ListHeaderComponent={inverted ? this.renderFooter : this.renderHeaderWrapper} onScroll={this.handleOnScroll} scrollEventThrottle={100} onLayout={this.onLayoutList} onEndReached={this.onEndReached} onEndReachedThreshold={0.1} {...this.props.listViewProps}/>\n      </View>);\n    }\n}\nMessageContainer.defaultProps = {\n    messages: [],\n    user: {},\n    isTyping: false,\n    renderChatEmpty: null,\n    renderFooter: null,\n    renderMessage: null,\n    onLoadEarlier: () => { },\n    onQuickReply: () => { },\n    inverted: true,\n    loadEarlier: false,\n    listViewProps: {},\n    invertibleScrollViewProps: {},\n    extraData: null,\n    scrollToBottom: false,\n    scrollToBottomOffset: 200,\n    alignTop: false,\n    scrollToBottomStyle: {},\n    infiniteScroll: false,\n    isLoadingEarlier: false,\n};\nMessageContainer.propTypes = {\n    messages: PropTypes.arrayOf(PropTypes.object),\n    isTyping: PropTypes.bool,\n    user: PropTypes.object,\n    renderChatEmpty: PropTypes.func,\n    renderFooter: PropTypes.func,\n    renderMessage: PropTypes.func,\n    renderLoadEarlier: PropTypes.func,\n    onLoadEarlier: PropTypes.func,\n    listViewProps: PropTypes.object,\n    inverted: PropTypes.bool,\n    loadEarlier: PropTypes.bool,\n    invertibleScrollViewProps: PropTypes.object,\n    extraData: PropTypes.array,\n    scrollToBottom: PropTypes.bool,\n    scrollToBottomOffset: PropTypes.number,\n    scrollToBottomComponent: PropTypes.func,\n    alignTop: PropTypes.bool,\n    scrollToBottomStyle: StylePropType,\n    infiniteScroll: PropTypes.bool,\n};\n//# sourceMappingURL=MessageContainer.js.map"]},"metadata":{},"sourceType":"script"}