{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Color = _interopRequireDefault(require(\"./Color\"));\n\nvar _utils = require(\"./utils\");\n\nvar _jsxFileName = \"/Users/shraygrover/final-project-tech-bros/_chatle/node_modules/react-native-gifted-chat/lib/GiftedAvatar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar carrot = _Color.default.carrot,\n    emerald = _Color.default.emerald,\n    peterRiver = _Color.default.peterRiver,\n    wisteria = _Color.default.wisteria,\n    alizarin = _Color.default.alizarin,\n    turquoise = _Color.default.turquoise,\n    midnightBlue = _Color.default.midnightBlue;\n\nvar styles = _reactNative.StyleSheet.create({\n  avatarStyle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  avatarTransparent: {\n    backgroundColor: _Color.default.backgroundTransparent\n  },\n  textStyle: {\n    color: _Color.default.white,\n    fontSize: 16,\n    backgroundColor: _Color.default.backgroundTransparent,\n    fontWeight: '100'\n  }\n});\n\nvar GiftedAvatar = function (_React$Component) {\n  (0, _inherits2.default)(GiftedAvatar, _React$Component);\n\n  var _super = _createSuper(GiftedAvatar);\n\n  function GiftedAvatar() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, GiftedAvatar);\n    _this = _super.apply(this, arguments);\n    _this.avatarName = undefined;\n    _this.avatarColor = undefined;\n\n    _this.handleOnPress = function () {\n      var _this$props = _this.props,\n          onPress = _this$props.onPress,\n          other = (0, _objectWithoutProperties2.default)(_this$props, [\"onPress\"]);\n\n      if (_this.props.onPress) {\n        _this.props.onPress(other);\n      }\n    };\n\n    _this.handleOnLongPress = function () {};\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(GiftedAvatar, [{\n    key: \"setAvatarColor\",\n    value: function setAvatarColor() {\n      var userName = this.props.user && this.props.user.name || '';\n      var name = userName.toUpperCase().split(' ');\n\n      if (name.length === 1) {\n        this.avatarName = \"\" + name[0].charAt(0);\n      } else if (name.length > 1) {\n        this.avatarName = \"\" + name[0].charAt(0) + name[1].charAt(0);\n      } else {\n        this.avatarName = '';\n      }\n\n      var sumChars = 0;\n\n      for (var i = 0; i < userName.length; i += 1) {\n        sumChars += userName.charCodeAt(i);\n      }\n\n      var colors = [carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue];\n      this.avatarColor = colors[sumChars % colors.length];\n    }\n  }, {\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      var user = this.props.user;\n\n      if (user) {\n        if (typeof user.avatar === 'function') {\n          return user.avatar([styles.avatarStyle, this.props.avatarStyle]);\n        } else if (typeof user.avatar === 'string') {\n          return _react.default.createElement(_reactNative.Image, {\n            source: {\n              uri: user.avatar\n            },\n            style: [styles.avatarStyle, this.props.avatarStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }\n          });\n        } else if (typeof user.avatar === 'number') {\n          return _react.default.createElement(_reactNative.Image, {\n            source: user.avatar,\n            style: [styles.avatarStyle, this.props.avatarStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }\n          });\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderInitials\",\n    value: function renderInitials() {\n      return _react.default.createElement(_reactNative.Text, {\n        style: [styles.textStyle, this.props.textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, this.avatarName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.user || !this.props.user.name && !this.props.user.avatar) {\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.avatarStyle, styles.avatarTransparent, this.props.avatarStyle],\n          accessibilityTraits: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        });\n      }\n\n      if (this.props.user.avatar) {\n        return _react.default.createElement(_reactNative.TouchableOpacity, {\n          disabled: !this.props.onPress,\n          onPress: this.props.onPress,\n          onLongPress: this.props.onLongPress,\n          accessibilityTraits: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }\n        }, this.renderAvatar());\n      }\n\n      this.setAvatarColor();\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        disabled: !this.props.onPress,\n        onPress: this.props.onPress,\n        onLongPress: this.props.onLongPress,\n        style: [styles.avatarStyle, {\n          backgroundColor: this.avatarColor\n        }, this.props.avatarStyle],\n        accessibilityTraits: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, this.renderInitials());\n    }\n  }]);\n  return GiftedAvatar;\n}(_react.default.Component);\n\nexports.default = GiftedAvatar;\nGiftedAvatar.defaultProps = {\n  user: {\n    name: null,\n    avatar: null\n  },\n  onPress: undefined,\n  onLongPress: undefined,\n  avatarStyle: {},\n  textStyle: {}\n};\nGiftedAvatar.propTypes = {\n  user: _propTypes.default.object,\n  onPress: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  avatarStyle: _utils.StylePropType,\n  textStyle: _utils.StylePropType\n};","map":{"version":3,"sources":["../src/GiftedAvatar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Image, Text, TouchableOpacity, View, StyleSheet, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst { carrot, emerald, peterRiver, wisteria, alizarin, turquoise, midnightBlue, } = Color;\nconst styles = StyleSheet.create({\n    avatarStyle: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 40,\n        height: 40,\n        borderRadius: 20,\n    },\n    avatarTransparent: {\n        backgroundColor: Color.backgroundTransparent,\n    },\n    textStyle: {\n        color: Color.white,\n        fontSize: 16,\n        backgroundColor: Color.backgroundTransparent,\n        fontWeight: '100',\n    },\n});\nexport default class GiftedAvatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.avatarName = undefined;\n        this.avatarColor = undefined;\n        this.handleOnPress = () => {\n            const { onPress, ...other } = this.props;\n            if (this.props.onPress) {\n                this.props.onPress(other);\n            }\n        };\n        this.handleOnLongPress = () => { };\n    }\n    setAvatarColor() {\n        const userName = (this.props.user && this.props.user.name) || '';\n        const name = userName.toUpperCase().split(' ');\n        if (name.length === 1) {\n            this.avatarName = `${name[0].charAt(0)}`;\n        }\n        else if (name.length > 1) {\n            this.avatarName = `${name[0].charAt(0)}${name[1].charAt(0)}`;\n        }\n        else {\n            this.avatarName = '';\n        }\n        let sumChars = 0;\n        for (let i = 0; i < userName.length; i += 1) {\n            sumChars += userName.charCodeAt(i);\n        }\n        // inspired by https://github.com/wbinnssmith/react-user-avatar\n        // colors from https://flatuicolors.com/\n        const colors = [\n            carrot,\n            emerald,\n            peterRiver,\n            wisteria,\n            alizarin,\n            turquoise,\n            midnightBlue,\n        ];\n        this.avatarColor = colors[sumChars % colors.length];\n    }\n    renderAvatar() {\n        const { user } = this.props;\n        if (user) {\n            if (typeof user.avatar === 'function') {\n                return user.avatar([styles.avatarStyle, this.props.avatarStyle]);\n            }\n            else if (typeof user.avatar === 'string') {\n                return (<Image source={{ uri: user.avatar }} style={[styles.avatarStyle, this.props.avatarStyle]}/>);\n            }\n            else if (typeof user.avatar === 'number') {\n                return (<Image source={user.avatar} style={[styles.avatarStyle, this.props.avatarStyle]}/>);\n            }\n        }\n        return null;\n    }\n    renderInitials() {\n        return (<Text style={[styles.textStyle, this.props.textStyle]}>\n        {this.avatarName}\n      </Text>);\n    }\n    render() {\n        if (!this.props.user ||\n            (!this.props.user.name && !this.props.user.avatar)) {\n            // render placeholder\n            return (<View style={[\n                styles.avatarStyle,\n                styles.avatarTransparent,\n                this.props.avatarStyle,\n            ]} accessibilityTraits='image'/>);\n        }\n        if (this.props.user.avatar) {\n            return (<TouchableOpacity disabled={!this.props.onPress} onPress={this.props.onPress} onLongPress={this.props.onLongPress} accessibilityTraits='image'>\n          {this.renderAvatar()}\n        </TouchableOpacity>);\n        }\n        this.setAvatarColor();\n        return (<TouchableOpacity disabled={!this.props.onPress} onPress={this.props.onPress} onLongPress={this.props.onLongPress} style={[\n            styles.avatarStyle,\n            { backgroundColor: this.avatarColor },\n            this.props.avatarStyle,\n        ]} accessibilityTraits='image'>\n        {this.renderInitials()}\n      </TouchableOpacity>);\n    }\n}\nGiftedAvatar.defaultProps = {\n    user: {\n        name: null,\n        avatar: null,\n    },\n    onPress: undefined,\n    onLongPress: undefined,\n    avatarStyle: {},\n    textStyle: {},\n};\nGiftedAvatar.propTypes = {\n    user: PropTypes.object,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    avatarStyle: StylePropType,\n    textStyle: StylePropType,\n};\n//# sourceMappingURL=GiftedAvatar.js.map"]},"metadata":{},"sourceType":"script"}